#!!python/object:__main__.Config
add_repo:
<% [$patt::add_repo].flatten.each |$repo| { -%>
- <%= $repo %>
<% } -%>
cluster_name: <%=$patt::cluster_name%>
<% if ! empty($patt::dcs_peers) { -%>
dcs_type: <%=$patt::dcs_type%>
dcs_peers:
<% [$patt::dcs_peers].flatten.each |$peer| { -%>
- <%= $peer %>
<% } -%>
<% }elsif ! empty($patt::etcd_peers) { -%>
<% if $patt::dcs_type == 'etcd' or $patt::dcs_type == 'etcd3' { -%>
dcs_type: <%=$patt::dcs_type%>
<% } else {-%>
dcs_type: 'etcd'
<% } -%>
dcs_peers:
<% [$patt::etcd_peers].flatten.each |$peer| { -%>
- <%= $peer %>
<% } -%>
<% } -%>
floating_ip:
<% [$patt::floating_ip].flatten.each |$fip| { -%>
- <%= $fip %>
<% } -%>
haproxy_peers:
<% [$patt::haproxy_peers].flatten.each |$peer| { -%>
- <%= $peer %>
<% } -%>
haproxy_template_file: <%=$patt::haproxy_template_file%>
log_file: <%=$patt::log_file%>
loglevel: <%=$patt::patt_loglevel%>
nodes:
<% [$patt::nodes].flatten.each |$n| { -%>
- <%= $n %>
<% } -%>
patroni_release: <%=$patt::patroni_release%>
patroni_template_file: <%=$patt::patroni_template_file%>
postgres_peers:
<% [$patt::postgres_peers].flatten.each |$peer| { -%>
- <%= $peer %>
<% } -%>
postgres_parameters:
<% [$patt::postgres_parameters].flatten.each |$pp| { -%>
- <%= $pp %>
<% } -%>
postgres_release: <%=$patt::postgres_release%>

network_postgres_clients:
<% [$patt::network_allow_postgres_clients].flatten.each |$np| { -%>
- <%= $np %>
<% } -%>
network_monitoring_clients:
<% [$patt::network_allow_monitoring_clients].flatten.each |$nm| { -%>
- <%= $nm %>
<% } -%>

walg_release: <%=$patt::walg_release%>
walg_url: <%=$patt::walg_url%>
walg_sha256: <%=$patt::walg_sha256%>

archiver: <%=$patt::archiver%>
<%- unless empty($patt::archive_store) { -%>
archive_store:
<%- [$patt::archive_store].flatten.each |$store| { -%>
 <%- if $store["method"] == "s3" { -%>
- {
   method: 's3',
   profile: '<%=$store["profile"]%>',
   endpoint: '<%=$store["endpoint"]%>',
   prefix: '<%=$store["prefix"]%>',
   region: '<%=$store["region"]%>',
   <%- if $store["force_path_style"] == "false" { -%>
   force_path_style: 'false'
<%- }else{ -%>
   force_path_style: 'true'
<%- } -%>
  }
<%- } -%>
 <%- if $store["method"] == "sh" { -%>
- {
   method: 'sh',
   host: '<%=$store["host"]%>',
   prefix: '<%=$store["prefix"]%>',
   identity_file: '<%=$store["identity_file"]%>'
  }
<%- } -%>
<%- } -%>
<%- } -%>

ssh_keyfile: <%=$patt::ssh_keyfile%>
ssh_login: <%=$patt::ssh_login%>
create_role:
<% $patt::pg_create_role.flatten.each|$n| { -%>
- {name: <%= $n['name'] %>, options: <%= $n['options'] %>}
<% } -%>
create_database:
<% $patt::pg_create_database.flatten.each|$n| { -%>
<%- if $n["cert"] == "true" or $n["cert"] == true { -%>
- {name: <%= $n['name'] %>, owner: <%= $n['owner']  %>, cert: <%= $n['cert'] -%>}
<%- } else { -%>
- {name: <%= $n['name'] %>, owner: <%= $n['owner'] -%>}
<% } -%>
<% } -%>
vol_size_walg: <%=$patt::vol_size_walg%>
vol_size_etcd: <%=$patt::vol_size_etcd%>
vol_size_raft: <%=$patt::vol_size_raft%>
vol_size_pgsql: <%=$patt::vol_size_pgsql%>
vol_size_pgsql_temp: <%=$patt::vol_size_pgsql_temp%>
vol_size_pgsql_safe: <%=$patt::vol_size_pgsql_safe%>
vol_size_pgsql_safe: <%=$patt::vol_size_pgbackrest%>

gc_cron_df_pc: <%=$patt::gc_cron_df_pc%>
gc_cron_target: <%=$patt::gc_cron_target%>

backup_cleanup_dry_run: <%=$patt::backup_cleanup_dry_run%>
backup_cleanup_keep_days: <%=$patt::backup_cleanup_keep_days%>
backup_cleanup_keep_hours: <%=$patt::backup_cleanup_keep_hours%>
backup_cleanup_keep_seconds: <%=$patt::backup_cleanup_keep_seconds%>
backup_full_push_days: <%=$patt::backup_full_push_days%>
backup_full_push_hours: <%=$patt::backup_full_push_hours%>
backup_full_push_seconds: <%=$patt::backup_full_push_seconds%>
backup_log_file: <%=$patt::backup_log_file%>
backup_log_level: <%=$patt::backup_log_level%>
backup_keep_away_schedule:
<%- [$patt::backup_keep_away_schedule].flatten.each |$k| { -%>
  - <%=$k['day']%>:
<%- [$k['schedule']].flatten.each |$l| { -%>
    - <%=$l%>
<%- } -%>
<%- } -%>

disk_free_alert_threshold_default_mb: <%=$patt::disk_free_alert_threshold_default_mb%>
disk_free_alert_threshold_default_pc: <%=$patt::disk_free_alert_threshold_default_pc%>
<%- if empty ($patt::disk_free_alert_threshold) { -%>
disk_free_alert_threshold: []
<%- }else{ -%>
disk_free_alert_threshold:
<%- [$patt::disk_free_alert_threshold].flatten.each |$k| { -%>
  - {
      path: '<%=$k['path']%>',
<%- if ! empty ($k["mb_free"]) { -%>
      mb_free: <%=$k["mb_free"]%>,
<%- } -%>
<%- if ! empty ($k["pc_free"]) { -%>
      pc_free: <%=$k["pc_free"]%>,
<%- } -%>
    }
<%- } -%>
<%- } -%>

dumping_db_exclude:
<% $patt::dumping_db_exclude.flatten.each|$d| { -%>
  - <%= $fd %>
<% } -%>
dumping_db_exclude_default:
<% $patt::dumping_db_exclude_default.flatten.each|$d| { -%>
  - <%= $d %>
<% } -%>
dumping_role_exclude:
<% $patt::dumping_role_exclude.flatten.each|$d| { -%>
  - <%= $d %>
<% } -%>
dumping_log_file: <%=$patt::dumping_log_file%>
dumping_log_level: <%=$patt::dumping_log_level%>
dumping_root_dir: <%=$patt::dumping_root_dir%>
dumping_format: <%=$patt::dumping_format%>
dumping_compress: <%=$patt::dumping_compress%>
dumping_rotate: <%=$patt::dumping_rotate%>
dumping_calendar_events:
<% $patt::dumping_calendar_events.flatten.each|$d| { -%>
  - <%= $d %>
<% } -%>
